type Task
  @model
  @auth(
    rules: [
      {
        allow: groups
        groups: ["Managers"]
        queries: null
        mutations: [create, update, delete]
      }
      {
        allow: groups
        groups: ["Employees"]
        queries: [get, list]
        mutations: null
      }
    ]
  ) {
  id: ID!
  title: String!
  description: String
  status: String
}
type PrivateNote @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  content: String!
}

type Player
  @model
  @auth(
    rules: [
      {
        allow: owner
        groups: ["Managers"]
        queries: [get, list]
        mutations: [create, update, delete]
      }
      {
        allow: groups
        groups: ["Players"]
        queries: [get, list]
        mutations: null
      }
    ]
  ) {
  id: ID!
  nickname: String!
  dateCreated: AWSDateTime!
  online: Boolean
  mail: AWSEmail
}

type Server @model {
  id: ID!
  title: String!
  playersOnline: [Player]
  games: [Game]
}

type Game @model {
  id: ID!
  title: String!
  teamA: [Player]
  teamB: [Player]
  score: String!
  gameType: GameType
}

type GameType @model {
  id: ID!
  title: String!
  type: Int!
  minPlayers: Int
  maxPlayers: Int
}
